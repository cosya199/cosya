from .. import loader from telethon import events import logging

logger = logging.getLogger(name)

version = (1, 0, 0) author = "ChatGPT"

–ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ ‚Äî –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ 

WORDS = [ "–∞—Ä–±—É–∑", "–∑–µ–±—Ä–∞", "–∞–≤—Ç–æ–º–æ–±–∏–ª—å", "–ª–∞–º–ø–∞", "–∞–ø–µ–ª—å—Å–∏–Ω", "–Ω–æ—Å–æ—Ä–æ–≥", "–≥–∞–∑–µ—Ç–∞", "–∞–Ω–∞–Ω–∞—Å", "—Å–æ–±–∞–∫–∞", "–∞—Ä–±—É–∑", "–∑–æ–Ω—Ç", "—Ç—Ä–∞–≤–∞", "–∞–≤—Ç–æ–º–∞—Ç", "—Ç–µ–∫—Å—Ç", "—Ç—Ä—É–±–∞" ]

class WordChainMod(loader.Module): """–ò–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞: –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ª–æ–≤–æ–º, –Ω–∞—á–∏–Ω–∞—é—â–∏–º—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É —Ç–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞."""

strings = { "name": "WordChain" } def __init__(self): self.last_letter = None async def –∏–≥—Ä–∞cmd(self, message): """–ù–∞—á–∞—Ç—å –∏–≥—Ä—É: .–∏–≥—Ä–∞ <—Ç–≤–æ—ë_—Å–ª–æ–≤–æ>""" args = message.text.split(maxsplit=1) if len(args) < 2: await message.edit("üî§ –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ: .–∏–≥—Ä–∞ —è–±–ª–æ–∫–æ") return user_word = args[1].strip().lower() self.last_letter = user_word[-1] # –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–ª–æ–≤–∞ for word in WORDS: if word[0] == self.last_letter: self.last_letter = word[-1] await message.edit(f"–¢—ã: {user_word}\n–Ø: {word}") return await message.edit(f"–¢—ã: {user_word}\nü§∑ –Ø –Ω–µ –∑–Ω–∞—é —Å–ª–æ–≤ –Ω–∞ –±—É–∫–≤—É '{self.last_letter.upper()}'") 
